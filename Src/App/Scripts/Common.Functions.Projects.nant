<?xml version="1.0"?>
<project name="Common.Functions.Projects" default="Private.InitProjectFunctions" xmlns="http://nant.sf.net/schemas/nant.xsd">

  <target name="Private.InitProjectFunctions">
    <script language="C#" prefix="Project">
    		<references>
              <include name="System.IO.dll" />
          </references>

		<code>
		<![CDATA[
					
			[Function("GetPropertiesPath")]
			public static string GetPropertiesPath(string startPath)
			{
				if (startPath == null)
					return String.Empty;
					
				if (startPath.IndexOf(".Project.nant") > 0)
					return startPath;
				else
				{
					foreach (string file in Directory.GetFiles(startPath, "*.Project.nant"))
					{
						return file;
					}
				}
				
				return String.Empty;
			}
			
			[Function("GetRootPath")]
			public static string GetRootPath(string startPath)
			{
				if (startPath.IndexOf(".nant") > 0)
					return Path.GetDirectoryName(startPath);
				else
				{
					return startPath;
				}
				
				return String.Empty;
			}
			
			[Function("LoadVersion")]
			public static string LoadVersion(string versionFile)
			{
				string fileContents = "1.0.0.0";
				
				if (!File.Exists(versionFile))
				{
				
					//project.Log(Level.Info, "Creating version file: " + versionFile);
					using (StreamWriter writer = new StreamWriter(File.OpenWrite(versionFile)))
					{
						writer.Write(fileContents);
						//writer.Close();
					}
				}
				else
				{
 
					//project.Log(Level.Info, "Opening version file: " + versionFile);
					using (StreamReader reader = File.OpenText(versionFile))
					{
						fileContents = reader.ReadToEnd();
						//reader.Close();
					}
				}
				
				string[] lines = fileContents.Split('\n');

				// Use the last line
				string version = String.Empty;
				if (lines.Length > 0)
					version = lines[lines.Length-1];

					return version;
			}
			
			
			[Function("SaveVersion")]
			public static string SaveVersion(string versionFile, string version)
			{
				//StreamWriter writer = null;
				try
				{
					//;
				
					using (StreamWriter writer = new StreamWriter(versionFile))
					{
						//writer.Clear();
						writer.Write(version);
						
						//writer.Close();						
					}
				
					return true.ToString();
				}
				catch (Exception ex)
				{
					return false.ToString();
				}
				//finally
				//{
				//	if (writer != null)
				//		writer.Close();
				//	writer = null;
				//}
			}
			
			
			[Function("IncrementVersion")]
			public static string IncrementVersion(string version)
			{					
				if (version == null)
					version = "0.0.0.0";
					
				string[] versions = version.Split('.');
				int revisionNumber = 0;
				string newVersion = String.Empty;

				try
				{
					revisionNumber = int.Parse(versions[3]);
					
					newVersion = string.Format("{0}.{1}.{2}.{3}", versions[0], versions[1], versions[2], revisionNumber+1);
					
				}
				catch (Exception ex)
				{	
					// TODO: Make default version editable via configuration settings
					newVersion = "1.0.0.0";
				}
				
				
				return newVersion;
			}
		
		]]>
		</code>
	</script>
  </target>
</project>
  	